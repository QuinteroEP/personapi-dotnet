// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using personapi_dotnet.Models.Entities;

#nullable disable

namespace personapi_dotnet.Migrations
{
    [DbContext(typeof(ArqPerDbContext))]
    partial class ArqPerDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("personapi_dotnet.Models.Entities.Estudio", b =>
                {
                    b.Property<int>("IdProf")
                        .HasColumnType("int")
                        .HasColumnName("id_prof");

                    b.Property<int>("CcPer")
                        .HasColumnType("int")
                        .HasColumnName("cc_per");

                    b.Property<DateOnly?>("Fecha")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("date")
                        .HasColumnName("fecha")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<string>("Univer")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("univer")
                        .HasDefaultValueSql("(NULL)");

                    b.HasKey("IdProf", "CcPer")
                        .HasName("PK_estudios_id_prof");

                    b.HasIndex(new[] { "CcPer" }, "estudio_persona_fk");

                    b.ToTable("estudios", "arq_per_db");
                });

            modelBuilder.Entity("personapi_dotnet.Models.Entities.Persona", b =>
                {
                    b.Property<int>("Cc")
                        .HasColumnType("int")
                        .HasColumnName("cc");

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasMaxLength(45)
                        .IsUnicode(false)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("apellido");

                    b.Property<int?>("Edad")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("edad")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<string>("Genero")
                        .IsRequired()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("genero");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(45)
                        .IsUnicode(false)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("nombre");

                    b.HasKey("Cc")
                        .HasName("PK_persona_cc");

                    b.ToTable("persona", "arq_per_db");
                });

            modelBuilder.Entity("personapi_dotnet.Models.Entities.Profesion", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<string>("Des")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("des");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasMaxLength(90)
                        .IsUnicode(false)
                        .HasColumnType("varchar(90)")
                        .HasColumnName("nom");

                    b.HasKey("Id")
                        .HasName("PK_profesion_id");

                    b.ToTable("profesion", "arq_per_db");
                });

            modelBuilder.Entity("personapi_dotnet.Models.Entities.Telefono", b =>
                {
                    b.Property<string>("Num")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("num");

                    b.Property<int>("Duenio")
                        .HasColumnType("int")
                        .HasColumnName("duenio");

                    b.Property<string>("Oper")
                        .IsRequired()
                        .HasMaxLength(45)
                        .IsUnicode(false)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("oper");

                    b.HasKey("Num")
                        .HasName("PK_telefono_num");

                    b.HasIndex(new[] { "Duenio" }, "telefono_persona_fk");

                    b.ToTable("telefono", "arq_per_db");
                });

            modelBuilder.Entity("personapi_dotnet.Models.Entities.Estudio", b =>
                {
                    b.HasOne("personapi_dotnet.Models.Entities.Persona", "CcPerNavigation")
                        .WithMany("Estudios")
                        .HasForeignKey("CcPer")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("estudios$estudio_persona_fk");

                    b.HasOne("personapi_dotnet.Models.Entities.Profesion", "IdProfNavigation")
                        .WithMany("Estudios")
                        .HasForeignKey("IdProf")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("estudios$estudio_profesion_fk");

                    b.Navigation("CcPerNavigation");

                    b.Navigation("IdProfNavigation");
                });

            modelBuilder.Entity("personapi_dotnet.Models.Entities.Telefono", b =>
                {
                    b.HasOne("personapi_dotnet.Models.Entities.Persona", "DuenioNavigation")
                        .WithMany("Telefonos")
                        .HasForeignKey("Duenio")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("telefono$telefono_persona_fk");

                    b.Navigation("DuenioNavigation");
                });

            modelBuilder.Entity("personapi_dotnet.Models.Entities.Persona", b =>
                {
                    b.Navigation("Estudios");

                    b.Navigation("Telefonos");
                });

            modelBuilder.Entity("personapi_dotnet.Models.Entities.Profesion", b =>
                {
                    b.Navigation("Estudios");
                });
#pragma warning restore 612, 618
        }
    }
}
